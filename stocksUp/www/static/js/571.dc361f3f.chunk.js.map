{"version":3,"file":"static/js/571.dc361f3f.chunk.js","mappings":"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","sources":["Pages/BuyPage/Carousel.jsx","Pages/BuyPage/LineChart1.jsx","Pages/BuyPage/BuyPage.jsx","Api/index.js","actions/portfolio.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CustomCarousel = ({ items }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % items.length);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentIndex((prevIndex) =>\r\n      prevIndex === 0 ? items.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"buy-page-carousel\">\r\n      <div className=\"carousel-left\" onClick={handlePrev}>\r\n        <i class=\"fas fa-arrow-left\"></i>\r\n      </div>\r\n\r\n      {items[currentIndex]}\r\n      <div className=\"carousel-right\" onClick={handleNext}>\r\n        <i class=\"fas fa-arrow-right\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomCarousel;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { backend_url } from \"../../config\";\r\nimport { Chart  } from 'chart.js/auto'\r\nimport {CategoryScale} from 'chart.js'; \r\nChart.register(CategoryScale);\r\n\r\nfunction generateTimeIntervals(currentTime) {\r\n  const endDate = new Date(`2024-02-01 ${currentTime}`);\r\n  return endDate.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n}\r\n\r\nconst LineChart1 = ({ portfolio_id, socket }) => {\r\n  const [label, setLabel] = useState([]);\r\n  const [lineLabel, setLineLabel] = useState([]);\r\n\r\n\r\n  // for making fetch request\r\n  useEffect(() => {\r\n    axios\r\n      .post(`${backend_url}/portfolios/data/line-chart`, {\r\n        portfolio_id,\r\n      })\r\n      .then(({ data }) => {\r\n        setLabel(data.x);\r\n        setLineLabel(data.lineData);\r\n      });\r\n  }, []);\r\n\r\n  // for making socket connection\r\n  useEffect(() => {\r\n    const generateLable = (data) => {\r\n      // data -> avg stock / user\r\n      const curr = new Date(Date.now());\r\n      const currTime = `${curr.getHours()}:${curr.getMinutes()}`;\r\n      let interval = generateTimeIntervals(currTime);\r\n\r\n      setLabel((x) => {\r\n        if (interval == x[x.length - 1]) {\r\n          setLineLabel((prevLine) => {\r\n            let lineLableCopy = [...prevLine];\r\n            lineLableCopy[lineLableCopy.length - 1] = data;\r\n            return lineLableCopy;\r\n          });\r\n          return [...x];\r\n        } else {\r\n          setLineLabel((prev) => {\r\n            return [...prev, data];\r\n          });\r\n          return [...x, interval];\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    socket.on(\"line-chart-data\", generateLable);\r\n    return () => {\r\n      // socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: \"#ddea11\", // X-axis grid color\r\n        },\r\n        ticks: {\r\n          color: \"#dddddd\", // X-axis tick color\r\n        },\r\n      },\r\n      y: {\r\n        grid: {\r\n          color: \"#dddddd\", // Y-axis grid color\r\n        },\r\n        ticks: {\r\n          color: \"#dddddd\", // Y-axis tick color\r\n        },\r\n      },\r\n    },\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"line-chart\">\r\n      <Line\r\n        datasetIdKey=\"id\"\r\n        data={{\r\n          labels: label,\r\n          datasets: [\r\n            {\r\n              id: 1,\r\n              label: \"\",\r\n              data: lineLabel,\r\n            },\r\n          ],\r\n        }}\r\n        options={options}\r\n      \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart1;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./BuyPage.css\";\r\nimport Carousel from \"./Carousel\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getPortfolio } from \"../../actions/portfolio\";\r\nimport LineChart1 from \"./LineChart1\";\r\nimport { ToastCallError, ToastCallSuccess } from \"../../ReactToast\";\r\nimport { io } from \"socket.io-client\";\r\nimport { backend_url } from \"../../config\";\r\nimport { useMyDetails } from \"../../customHooks/useMyDetails\";\r\n\r\nconst comp2 = () => {\r\n  return <p>hi there.</p>;\r\n};\r\n\r\nlet socket;\r\nlet userId;\r\n\r\nconst BuyPage = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const projects = useSelector((state) => state.portfolio);\r\n  const [currProject, setCurrProject] = useState();\r\n  const [bio, setBio] = useState();\r\n  const [name, setName] = useState();\r\n  const [leader, setLeader] = useState();\r\n  const [stocks, setStocks] = useState();\r\n  const [userMoney, setUserMoney] = useState(0);\r\n  let [carouselItems, setCarouselItems] = useState([]);\r\n\r\n  const [me, setRender] = useMyDetails();\r\n\r\n  // custom hook\r\n  const comp1 = () => {\r\n    return <p style={{ textAlign: \"center\" }}>{bio}</p>;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getPortfolio());\r\n  }, [dispatch]);\r\n\r\n  const buyRef = useRef(\"\");\r\n\r\n  const handleBuy = () => {\r\n    let buyProd = buyRef.current.value;\r\n    if (!buyProd || buyProd <= 0) {\r\n      ToastCallError(\"Invalid Input\");\r\n      return;\r\n    }\r\n\r\n    socket.volatile.emit(\"buy\", id, userId, buyProd);\r\n    buyRef.current.value = \"\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(backend_url);\r\n    // socket = io(\"http://localhost:5000\");\r\n    console.log(\"useeffect\");\r\n\r\n    userId = localStorage.getItem(\"icell_pitcher_userId\");\r\n    //   ? JSON.parse(localStorage.getItem(\"icell_pitcher_userId\"))\r\n    //   : null;\r\n    userId = localStorage.getItem(\"icell_pitcher_userId\")\r\n      ? JSON.parse(localStorage.getItem(\"icell_pitcher_userId\"))\r\n      : null;\r\n\r\n    console.log(userId);\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"Socket is connected (frontend)\");\r\n    });\r\n\r\n    socket.emit(\"join-room\", id);\r\n\r\n    socket.emit(\"getStock\", id, userId, (getData) => {\r\n      setStocks(getData[0]);\r\n      setUserMoney(getData[1]);\r\n\r\n      // navbar change\r\n    });\r\n\r\n    socket.on(\"show-stock\", (stock) => {\r\n      setStocks(stock[0]);\r\n      setUserMoney(stock[1]);\r\n    });\r\n\r\n    socket.on(\"userStock-empty\", () => {\r\n      ToastCallError(\"Dont have enough Stock \");\r\n    });\r\n\r\n    socket.on(\"stock-empty\", () => {\r\n      ToastCallError(\"stock empty\");\r\n    });\r\n\r\n    socket.on(\"successfully-purchased\", (purchasedProd) => {\r\n      ToastCallSuccess(`Successfully Purchased ${purchasedProd} stocks`);\r\n      setRender((prev) => !prev);\r\n\r\n\r\n    });\r\n\r\n    socket.on(\"disconnect\", function () {\r\n      console.log(\"Got disconnect!\");\r\n      navigate(\"/Portfolio\");\r\n    });\r\n\r\n    setCarouselItems([\r\n      <LineChart1 portfolio_id={id} socket={socket} />,\r\n      comp1(),\r\n  \r\n    ]);\r\n    return () => {\r\n      console.log(\"socket disconnecg\");\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if projects is not empty and has at least one element\r\n    if (projects && projects.length > 0) {\r\n      var project = projects[0];\r\n\r\n      for (var i = 0; i < project.length; i++) {\r\n        if (project[i]._id === id) {\r\n          setCurrProject(project[i]);\r\n          setName(project[i].name);\r\n          setBio(project[i].about);\r\n          setLeader(project[i].leader);\r\n          setStocks(project[i].stock);\r\n          break; // Once the project is found, exit the loop\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  useEffect(()=>{    setCarouselItems([\r\n    <LineChart1 portfolio_id={id} socket={socket} />,\r\n    comp1(),\r\n\r\n  ]);},[bio])\r\n\r\n  // const carouselItems = [<LineChart1 socket={socket} /> ,comp1(), comp2()];\r\n\r\n  return (\r\n    <div className=\"buy-page\">\r\n      <div className=\"buy-page-details\">\r\n        <h2>{name}</h2>\r\n\r\n        <Carousel items={carouselItems} />\r\n      </div>\r\n      <div className=\"buy-page-input\">\r\n        <p>\r\n          <input\r\n            type=\"number\"\r\n            placeholder={`Enter Amount / ${stocks}`}\r\n            className=\"buy-amount\"\r\n            ref={buyRef}\r\n          />\r\n        </p>\r\n        <button onClick={handleBuy}>Buy</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyPage;\r\n","import axios from \"axios\";\r\nimport {backend_url} from  \"../config\"\r\n\r\nconst url = `${backend_url}/portfolios`;\r\n\r\nexport const fetchPortfolios = () => axios.get(url);\r\nexport const createPortfolio = (newPortfolio) => axios.post(url, newPortfolio);","import {FETCH_ALL, CREATE} from \"../constants/actiontypes\";\r\n\r\nimport * as api from \"../Api/index.js\";\r\n\r\nexport const getPortfolio = () => async (dispatch) => {\r\n  try {\r\n    const {data} = await api.fetchPortfolios();\r\n  \r\n    dispatch({type: FETCH_ALL, payload: data});\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const createPortfolio = (post) => async (dispatch) => {\r\n  try {\r\n    const {data} = await api.createPortfolio(post);\r\n\r\n    dispatch({type: CREATE, payload: data});\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n"],"names":["_ref","items","currentIndex","setCurrentIndex","useState","_jsxs","className","children","_jsx","onClick","handlePrev","prevIndex","length","class","handleNext","Chart","register","CategoryScale","portfolio_id","socket","label","setLabel","lineLabel","setLineLabel","useEffect","axios","post","concat","backend_url","then","_ref2","data","x","lineData","on","curr","Date","now","currTime","getHours","getMinutes","interval","toLocaleTimeString","hour","minute","prevLine","lineLableCopy","prev","Line","datasetIdKey","labels","datasets","id","options","scales","grid","color","ticks","y","userId","BuyPage","useParams","navigate","useNavigate","dispatch","useDispatch","projects","useSelector","state","portfolio","currProject","setCurrProject","bio","setBio","name","setName","leader","setLeader","stocks","setStocks","userMoney","setUserMoney","carouselItems","setCarouselItems","me","setRender","useMyDetails","comp1","style","textAlign","getPortfolio","buyRef","useRef","io","console","log","localStorage","getItem","JSON","parse","emit","getData","stock","ToastCallError","purchasedProd","ToastCallSuccess","LineChart1","disconnect","project","i","_id","about","Carousel","type","placeholder","ref","handleBuy","buyProd","current","value","volatile","url","async","get","FETCH_ALL","payload","error","message"],"sourceRoot":""}